#!/usr/bin/env python
import argparse
import math

import rospy
from geometry_msgs.msg import Twist
from sensor_msgs.msg import LaserScan

import laser
from laser.msg import Laser_Info


class Laser(object):
    """Node that extracts information from 2D laser."""

    def __init__(self, debug=False):
        """Constructor that initializes node."""
        rospy.init_node("laser", anonymous=True)
        rospy.Subscriber("/base_scan", LaserScan, self.callback)

        self.laser_topic = rospy.Publisher(
            "hackathon/laser", Laser_Info, queue_size=10)
        self.debug = debug
        if debug:
            self.debug_topic = rospy.Publisher(
                "hackathon/laser_debug", LaserScan, queue_size=10)
            rospy.Subscriber("hackathon/laser", Laser_Info, self.test_callback)

    @staticmethod
    def run():
        """Main listener loop."""
        rospy.spin()

    def callback(self, laser_scan):
        """Process laser scan message."""
        best_line, best_inliers = laser.find_line(
            laser_scan, t=0.05, p=0.999, e=0.7, T=350)

        left_rng, right_rng = laser.find_side_distances(
            best_line, best_inliers, laser_scan)

        rng_temp, angle_temp = best_line
        best_line = (rng_temp, angle_temp, left_rng, right_rng)

        laser_info = Laser_Info()
        laser_info.rng, laser_info.angle, laser_info.left_rng, laser_info.right_rng = best_line
        self.laser_topic.publish(laser_info)

        if self.debug:
            debug_message = laser_scan
            laser_scan.intensities = 0.5+0.5*(best_inliers == True)
            self.debug_topic.publish(debug_message)

    def test_callback(self, laser_info):
        """test call back"""
        best_line = laser_info
        # print(best_line.rng, math.degrees(
        #     best_line.angle))
        # print(best_line.left_rng,
        #       best_line.right_rng)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='laser mode')
    parser.add_argument('--debug', dest='debug', action='store_true',
                        default=False, help="""run laser in debug mode,
                        publishes laser scan messages on 
                        /hackathon/laser_debug""")
    print(rospy.myargv())
    args = parser.parse_args(rospy.myargv()[1:])

    Laser(args.debug).run()
